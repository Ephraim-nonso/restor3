"use client";

import React, { useState } from "react";

interface AuthPageProps {
  onAuthSuccess: () => void;
}

const AuthPage: React.FC<AuthPageProps> = ({ onAuthSuccess }) => {
  const [currentStep, setCurrentStep] = useState("welcome");
  const [showGoogleSignIn, setShowGoogleSignIn] = useState(false);
  const [showLinkWallet, setShowLinkWallet] = useState(false);
  const [showBackupWallet, setShowBackupWallet] = useState(false);
  const [showSecureLinking, setShowSecureLinking] = useState(false);
  const [showEmailVerification, setShowEmailVerification] = useState(false);
  const [showCheckingEligibility, setShowCheckingEligibility] = useState(false);
  const [showEmailSuccess, setShowEmailSuccess] = useState(false);

  const handleGoogleSignIn = () => {
    setShowGoogleSignIn(true);
  };

  const handleGoogleAccountSelect = () => {
    setShowGoogleSignIn(false);
    setShowLinkWallet(true);
  };

  const handleLinkMainWallet = () => {
    setShowLinkWallet(false);
    setShowBackupWallet(true);
  };

  const handleLinkBackupWallet = () => {
    setShowBackupWallet(false);
    setShowSecureLinking(true);
  };

  const handleSecureLinking = () => {
    setShowSecureLinking(false);
    setShowEmailVerification(true);
  };

  const handleEmailVerification = () => {
    setShowEmailVerification(false);
    setShowCheckingEligibility(true);

    // Simulate checking eligibility
    setTimeout(() => {
      setShowCheckingEligibility(false);
      setShowEmailSuccess(true);
    }, 3000);
  };

  const handleContinue = () => {

  // Back button handler for returning to auth page
  const handleBackToAuth = () => {
    setShowGoogleSignIn(false);
    setShowLinkWallet(false);
    setShowBackupWallet(false);
    setShowSecureLinking(false);
    setShowEmailVerification(false);
    setShowCheckingEligibility(false);
    setShowEmailSuccess(false);
  };    setShowLinkWallet(false);
    setShowBackupWallet(false);
    setShowSecureLinking(false);
    setShowEmailVerification(false);
    setShowCheckingEligibility(false);
    setShowEmailSuccess(false);
  };    setShowEmailSuccess(false);
    onAuthSuccess();
  };

  return (
    <div className="min-h-screen bg-gray-900 flex">
      {/* Left Sidebar */}
      <div className="w-1/2 bg-white p-8 flex flex-col">
        <div className="mt-12">
          
          <h1 className="text-2xl font-bold text-gray-800 mb-2">Welcome to</h1>
          <h1 className="text-7xl font-bold bg-gradient-to-r from-green-400 to-yellow-400 bg-clip-text text-transparent">
            Restor3
          </h1>
        </div>

        <div className="flex-1 flex items-center">
          <div className="bg-green-50 rounded-lg p-8 w-full">
            <div className="flex items-center mb-4">
              <svg
                className="w-6 h-6 text-yellow-500 mr-2"
                fill="currentColor"
                viewBox="0 0 20 20"
              >
                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
              </svg>
              <h2 className="text-xl font-semibold text-gray-800">
                Learn More
              </h2>
                <button onClick={handleBackToAuth} className="flex items-center text-gray-600 hover:text-gray-800">
                  <svg className="w-5 h-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
                  </svg>
                  Back
                </button>
            </div>
            <p className="text-gray-600 mb-6">Awesome contents</p>
            <div className="flex items-center space-x-4 mb-6">
              <div className="w-12 h-12 bg-gray-300 rounded-full"></div>
              <div className="w-12 h-12 bg-gray-300 rounded-full"></div>
              <div className="w-12 h-12 bg-gray-300 rounded-full"></div>
            </div>
            <button className="w-full bg-green-600 text-white py-3 px-6 rounded-lg font-medium hover:bg-green-700">
              Get Started
            </button>
          </div>
        </div>
      </div>

      {/* Right Content */}
      <div className="w-1/2 bg-gray-800 p-8 flex flex-col justify-center">
        <div className="max-w-md mx-auto">
          <h2 className="text-3xl font-bold text-white mb-2">Get Access</h2>
                <button onClick={handleBackToAuth} className="flex items-center text-gray-600 hover:text-gray-800">
                  <svg className="w-5 h-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
                  </svg>
                  Back
                </button>
          <p className="text-gray-300 mb-8">
            A smart way to manage your crypto assets and can also help you earn
            more rewards.
          </p>

          <div className="space-y-4">
            <div className="bg-gray-700 rounded-lg p-4">
              <p className="text-gray-300 text-sm mb-4">
                For you to perform transactions, you need to connect your wallet
                to your account.
              </p>
              <div className="flex items-center space-x-2">
                <input
                  type="text"
                  placeholder="address"
                  className="flex-1 bg-gray-600 text-white px-4 py-2 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500"
                />
                <button className="bg-green-600 text-white p-2 rounded-lg hover:bg-green-700">
                  <svg
                    className="w-5 h-5"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth={2}
                      d="M9 5l7 7-7 7"
                    />
                  </svg>
                </button>
              </div>
            </div>

            <div className="text-center">
              <p className="text-gray-400 text-sm mb-4">other options</p>
              <button
                onClick={handleGoogleSignIn}
                className="w-full bg-white text-gray-800 py-3 px-6 rounded-lg font-medium hover:bg-gray-100 flex items-center justify-center space-x-2"
              >
                <svg className="w-6 h-6" viewBox="0 0 24 24">
                  <path
                    fill="#4285F4"
                    d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"
                  />
                  <path
                    fill="#34A853"
                    d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"
                  />
                  <path
                    fill="#FBBC05"
                    d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"
                  />
                  <path
                    fill="#EA4335"
                    d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"
                  />
                </svg>
                <span>Sign in with Google</span>
              </button>
            </div>

            <div className="text-center text-gray-400 text-sm">
              <p>
                Signifies that you have accepted our{" "}
                <a href="#" className="text-orange-500 hover:text-orange-400">
                  privacy and legal obligations
                </a>
              </p>
            </div>
          </div>
        </div>

        <button className="absolute top-8 right-8 bg-gray-700 text-white px-4 py-2 rounded-lg hover:bg-gray-600">
          Skip for now
        </button>
      </div>

      {/* Google Sign In Modal */}
      {showGoogleSignIn && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white rounded-lg shadow-xl max-w-md w-full mx-4">
            <div className="p-6">
              <div className="flex items-center justify-between mb-6">
                <svg className="w-6 h-6 mr-2" viewBox="0 0 24 24">
                  <path
                    fill="#4285F4"
                    d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"
                  />
                  <path
                    fill="#34A853"
                    d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"
                  />
                  <path
                    fill="#FBBC05"
                    d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"
                  />
                  <path
                    fill="#EA4335"
                    d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"
                  />
                </svg>
                <h2 className="text-xl font-semibold text-gray-800">
                  Sign in with google
                </h2>
                <button onClick={handleBackToAuth} className="flex items-center text-gray-600 hover:text-gray-800">
                  <svg className="w-5 h-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
                  </svg>
                  Back
                </button>
              </div>

              <p className="text-gray-600 mb-6">
                Choose an account you would love to continue with
              </p>

              <div className="space-y-3 mb-6">
                <div
                  className="flex items-center p-3 border border-gray-200 rounded-lg hover:bg-gray-50 cursor-pointer"
                  onClick={handleGoogleAccountSelect}
                >
                  <div className="w-10 h-10 bg-green-500 rounded-full flex items-center justify-center mr-3">
                    <span className="text-white font-medium">AS</span>
                  </div>
                  <div>
                    <p className="font-medium text-gray-800">Adebayo Solomon</p>
                    <p className="text-sm text-gray-500">
                      Adebayosolomon74@gmail.com
                    </p>
                  </div>
                </div>

                <div
                  className="flex items-center p-3 border border-gray-200 rounded-lg hover:bg-gray-50 cursor-pointer"
                  onClick={handleGoogleAccountSelect}
                >
                  <div className="w-10 h-10 bg-green-500 rounded-full flex items-center justify-center mr-3">
                    <span className="text-white font-medium">AS</span>
                  </div>
                  <div>
                    <p className="font-medium text-gray-800">Adebayo Solomon</p>
                    <p className="text-sm text-gray-500">Oxprank@gmail.com</p>
                  </div>
                </div>

                <div
                  className="flex items-center p-3 border border-gray-200 rounded-lg hover:bg-gray-50 cursor-pointer"
                  onClick={handleGoogleAccountSelect}
                >
                  <div className="w-10 h-10 bg-green-500 rounded-full flex items-center justify-center mr-3">
                    <span className="text-white font-medium">AS</span>
                  </div>
                  <div>
                    <p className="font-medium text-gray-800">Adebayo Solomon</p>
                    <p className="text-sm text-gray-500">OxKode@gmail.com</p>
                  </div>
                </div>
              </div>

              <p className="text-sm text-gray-500 text-center">
                You can check through Restor3{" "}
                <a href="#" className="text-orange-500 hover:text-orange-400">
                  privacy and legal obligations
                </a>{" "}
                here before going through with this action.
              </p>
            </div>
          </div>
        </div>
      )}

      {/* Link Wallet Modal */}
      {showLinkWallet && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white rounded-lg shadow-xl max-w-md w-full mx-4">
            <div className="p-6">
              <h2 className="text-xl font-semibold text-gray-800 mb-4">
                Link Wallet
              </h2>
                <button onClick={handleBackToAuth} className="flex items-center text-gray-600 hover:text-gray-800">
                  <svg className="w-5 h-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
                  </svg>
                  Back
                </button>
              <p className="text-gray-600 mb-6">
                Connect your Main wallet, this is the wallet you wish to secure
                its rewards
              </p>

              <div className="w-full bg-gray-200 rounded-full h-2 mb-6">
                <div
                  className="bg-green-500 h-2 rounded-full"
                  style={{ width: "40%" }}
                ></div>
              </div>

              <div className="flex items-center space-x-2 mb-6">
                <input
                  type="text"
                  placeholder="Connect your MAIN wallet"
                  className="flex-1 bg-gray-100 text-gray-800 px-4 py-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500"
                />
                <button
                  onClick={handleLinkMainWallet}
                  className="bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 flex items-center space-x-2"
                >
                  <svg
                    className="w-5 h-5"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth={2}
                      d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z"
                    />
                  </svg>
                  <span>Connect Wallet</span>
                </button>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Backup Wallet Modal */}
      {showBackupWallet && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white rounded-lg shadow-xl max-w-md w-full mx-4">
            <div className="p-6">
              <h2 className="text-xl font-semibold text-gray-800 mb-4">
                Link Wallet
              </h2>
                <button onClick={handleBackToAuth} className="flex items-center text-gray-600 hover:text-gray-800">
                  <svg className="w-5 h-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
                  </svg>
                  Back
                </button>
              <p className="text-gray-600 mb-6">
                Connect your BACKUP wallet, if you don't have any we can
                generate create one{" "}
                <a href="#" className="text-blue-600 hover:text-blue-500">
                  here
                </a>
              </p>

              <div className="w-full bg-gray-200 rounded-full h-2 mb-6">
                <div
                  className="bg-green-500 h-2 rounded-full"
                  style={{ width: "60%" }}
                ></div>
              </div>

              <div className="flex items-center space-x-2 mb-6">
                <input
                  type="text"
                  placeholder="Connect your BACKUP wallet"
                  className="flex-1 bg-gray-100 text-gray-800 px-4 py-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500"
                />
                <button
                  onClick={handleLinkBackupWallet}
                  className="bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 flex items-center space-x-2"
                >
                  <svg
                    className="w-5 h-5"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth={2}
                      d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z"
                    />
                  </svg>
                  <span>Connect Wallet</span>
                </button>
              </div>

              <p className="text-sm text-gray-600">
                Backup wallets are used to collect rewards ensure to keep them
                safe. To manage your account properly we advise you create a{" "}
                <a href="#" className="text-blue-600 hover:text-blue-500">
                  Smart Account
                </a>
              </p>
            </div>
          </div>
        </div>
      )}

      {/* Secure Wallet Linking Modal */}
      {showSecureLinking && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white rounded-lg shadow-xl max-w-md w-full mx-4">
            <div className="p-6">
              <h2 className="text-xl font-semibold text-gray-800 mb-4">
                Secure Wallet Linking
              </h2>
                <button onClick={handleBackToAuth} className="flex items-center text-gray-600 hover:text-gray-800">
                  <svg className="w-5 h-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
                  </svg>
                  Back
                </button>
              <p className="text-gray-600 mb-6">
                Sign transaction on your Main wallet and link it to your backup
                wallet
              </p>

              <div className="w-full bg-gray-200 rounded-full h-2 mb-6">
                <div
                  className="bg-green-500 h-2 rounded-full"
                  style={{ width: "80%" }}
                ></div>
              </div>

              <div className="space-y-4 mb-6">
                <div className="flex items-center justify-between p-3 border border-gray-200 rounded-lg">
                  <div className="flex items-center">
                    <svg
                      className="w-5 h-5 text-gray-600 mr-3"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth={2}
                        d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"
                      />
                    </svg>
                    <span className="text-gray-800">Main Wallet</span>
                  </div>
                  <div className="flex items-center space-x-2">
                    <span className="text-sm text-gray-500">
                      0x508252d...c72
                    </span>
                    <button className="bg-red-600 text-white px-3 py-1 rounded text-sm hover:bg-red-700">
                      Disconnect
                    </button>
                  </div>
                </div>

                <div className="flex items-center justify-between p-3 border border-gray-200 rounded-lg">
                  <div className="flex items-center">
                    <svg
                      className="w-5 h-5 text-gray-600 mr-3"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth={2}
                        d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"
                      />
                    </svg>
                    <span className="text-gray-800">Back-up Wallet</span>
                  </div>
                  <div className="flex items-center space-x-2">
                    <span className="text-sm text-gray-500">
                      0x508252d...c72
                    </span>
                    <button className="bg-red-600 text-white px-3 py-1 rounded text-sm hover:bg-red-700">
                      Disconnect
                    </button>
                  </div>
                </div>
              </div>

              <button
                onClick={handleSecureLinking}
                className="w-full bg-green-600 text-white py-3 px-6 rounded-lg font-medium hover:bg-green-700"
              >
                Link Wallet
              </button>
            </div>
          </div>
        </div>
      )}

      {/* Email Verification Modal */}
      {showEmailVerification && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white rounded-lg shadow-xl max-w-md w-full mx-4">
            <div className="p-6">
              <h2 className="text-xl font-semibold text-gray-800 mb-4">
                Email Verification
              </h2>
                <button onClick={handleBackToAuth} className="flex items-center text-gray-600 hover:text-gray-800">
                  <svg className="w-5 h-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
                  </svg>
                  Back
                </button>
              <p className="text-gray-600 mb-4">
                Enter the code sent to your email address below.
              </p>
              <p className="text-sm text-gray-500 mb-6">
                adebayosolomon74@gmail.com
              </p>

              <div className="flex space-x-2 mb-6">
                {[1, 2, 3, 4, 5, 6].map((digit) => (
                  <input
                    key={digit}
                    type="text"
                    maxLength={1}
                    className="w-12 h-12 text-center border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500"
                  />
                ))}
              </div>

              <div className="flex items-center justify-between mb-6">
                <span className="text-sm text-gray-600">
                  Didn't get the code?{" "}
                  <a href="#" className="text-orange-500 hover:text-orange-400">
                    Resend
                  </a>
                </span>
                <span className="text-sm text-green-600">
                  Try after 00:56 secs
                </span>
              </div>

              <button
                onClick={handleEmailVerification}
                className="w-full bg-gradient-to-r from-green-600 to-green-500 text-white py-3 px-6 rounded-lg font-medium hover:from-green-700 hover:to-green-600"
              >
                Submit
              </button>
            </div>
          </div>
        </div>
      )}

      {/* Checking Eligibility Modal */}
      {showCheckingEligibility && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white rounded-lg shadow-xl max-w-md w-full mx-4">
            <div className="p-6 text-center">
              <h2 className="text-xl font-semibold text-gray-800 mb-4">
                Checking for eligibility
              </h2>
                <button onClick={handleBackToAuth} className="flex items-center text-gray-600 hover:text-gray-800">
                  <svg className="w-5 h-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
                  </svg>
                  Back
                </button>
              <p className="text-gray-600 mb-6">
                Checking for wallet eligibility across protocols, this might
                take about <span className="font-bold">2 Mins</span>
              </p>

              <div className="w-32 h-32 mx-auto mb-6 bg-green-100 rounded-full flex items-center justify-center">
                <svg
                  className="w-16 h-16 text-green-600"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={2}
                    d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9v-9m0-9v9"
                  />
                </svg>
              </div>

              <button className="w-full bg-gradient-to-r from-green-600 to-green-500 text-white py-3 px-6 rounded-lg font-medium">
                Scanning...
              </button>
            </div>
          </div>
        </div>
      )}

      {/* Email Success Modal */}
      {showEmailSuccess && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white rounded-lg shadow-xl max-w-md w-full mx-4">
            <div className="p-6 text-center">
              <h2 className="text-xl font-semibold text-gray-800 mb-4">
                Email Verification
              </h2>
                <button onClick={handleBackToAuth} className="flex items-center text-gray-600 hover:text-gray-800">
                  <svg className="w-5 h-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
                  </svg>
                  Back
                </button>
              <p className="text-lg text-gray-700 mb-2">You are all set</p>
              <p className="text-gray-600 mb-6">
                Let's jump right in and discover the unlimited possibilities
                that awaits you.
              </p>

              <div className="w-32 h-32 mx-auto mb-6 relative">
                <div className="w-full h-full bg-green-500 rounded-full flex items-center justify-center">
                  <svg
                    className="w-16 h-16 text-white"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth={3}
                      d="M5 13l4 4L19 7"
                    />
                  </svg>
                </div>
                <div className="absolute inset-0 border-4 border-green-300 rounded-full animate-pulse"></div>
                <div
                  className="absolute inset-2 border-4 border-green-200 rounded-full animate-pulse"
                  style={{ animationDelay: "0.2s" }}
                ></div>
                <div
                  className="absolute inset-4 border-4 border-green-100 rounded-full animate-pulse"
                  style={{ animationDelay: "0.4s" }}
                ></div>
              </div>

              <button
                onClick={handleContinue}
                className="w-full bg-gradient-to-r from-green-600 to-green-500 text-white py-3 px-6 rounded-lg font-medium hover:from-green-700 hover:to-green-600"
              >
                Continue
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default AuthPage;
